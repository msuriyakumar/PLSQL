declare 
V_num number (20):= 20;
V_star number(20):= 40;
V_cat number(20);
begin 
V_cat := V_num+V_star;
dbms_output.put_line('the addition is:' || V_cat);
end;

declare 
V_num number (20):= &V_num;
V_star number(20):= &V_star;
V_cat number(20);
begin 
V_cat := V_num+V_star;
dbms_output.put_line('the addition is:' || V_cat);
end;


declare 
V_num number (20);
V_star number(20);
V_cat number(20);
begin 
V_num:= 10;
V_star:=20;
V_cat := V_num+V_star;
dbms_output.put_line('the addition is:' || V_cat);
end;

create table ipl (
csk number(20) ,
Mi varchar(20),
RR varchar(20),
srh varchar(20)
);


declare
V_csk number(20);
V_mi varchar(20);
V_RR varchar(20);
V_srh varchar(20);
begin 
insert into ipl
values ('1','dhoni','thala','chepak');
dbms_output.put_line(' the values dhoni is added');
insert into ipl
values ('2','rohit','thala','chepak');
dbms_output.put_line(' the values rohit is added');
insert into ipl
values ('2','rutu','thala','chepak');
dbms_output.put_line(' the values rutu is added');


update ipl
set csk  = 7 where csk =1;
dbms_output.put_line('the value is updated');

select csk, mi, rr, srh into V_csk,V_mi,V_RR,V_srh from ipl where mi = 'dhoni';
dbms_output.put_line(' the thala is' || V_mi);
end;

select * from ipl;


--anchor datatype

declare
V_num ipl.csk%type;

--constant
declare
V_suriya constant number(20) default 100;
begin
dbms_output.put_line(' the values is :' || V_suriya);
end;

VARIABLE ret_val NUMBER
begin
    :ret_val:=4;
    end;
    /
print ret_val;

declare
V_star number (20):=&V_star;
V_dhini number(20):=&V_dhini;
begin
if (V_star<=10) or (V_dhini>=10)
then
 dbms_output.put_line(' the statement is true' || V_dhini );
 --else
 --dbms_output.put_line(' the stam is false');
 
 end if;
 dbms_output.put_line(' the stam is false');
 end;

declare 
V_star number (20):=&V_staar;
V_dhini number(20):=&V_dhini;
V_rohit number(20):=&V_rohit;
begin
if (V_star = 10)
then 
 dbms_output.put_line(' the statement is true' || V_star );
 elsif (V_dhini = 11)
 then 
  dbms_output.put_line(' the statement is true' || V_dhini );
  elsif (V_rohit =12)
  then
    dbms_output.put_line(' the statement is true' || V_rohit );
  else
        dbms_output.put_line(' tnothis is correct:' ||V_star ||V_dhini||V_rohit );
        end if;
        end;

declare
V_number number(20):= &V_number;
--V_bro number(20):= &V_tube;
begin
if mod (V_number,2) = 0
then 
dbms_output.put_line(' the value is even:' ||V_number);
else
dbms_output.put_line(' the value is odd:'|| V_number);
end if;
end;
  
declare
V_number number := 0;
V_values number ;
begin
loop
V_number := V_number + 1;
V_values:= 3* V_number;
dbms_output.put_line('3' || 'X' || V_number || '=' || V_values);
if ( V_number >= 20)
then 
exit;
end if;
end loop;
end;

declare
V_number number := 1;
V_values number ;
begin

while(V_number <= 10)loop
V_values := 4*V_number;
dbms_output.put_line('4' || 'X' || V_number || '=' || V_values);
V_number:= V_number +1;
end loop;
end;

begin 
for V_num in 1 ..10 loop
dbms_output.put_line(' the values is ' || V_num );
end loop;
end;



declare
V_num number(20);
begin
--V_num := 5*V_suriya ;
for V_suriya in 1 .. 10 loop
V_num := 5*V_suriya ;
dbms_output.put_line('5' || 'X' || V_suriya || '=' || V_num);
end loop;
end;


declare
V_num number;
begin 
for V_suriya  in 1 .. 20 loop
if mod( V_suriya,2) = 0
then
continue;
end if;
dbms_output.put_line(V_suriya);
end loop;
end;

begin 
for V_star in 1 .. 20 loop
if mod (V_star, 2) = 1 then
continue;
end if;
dbms_output.put_line(V_star);
end loop;
end;

<<outer>>
declare
V_number number :=20;
V_starr varchar(20) := 'suriya';
V_dob date := sysdate;
begin 
declare
V_number number := 200;
V_star varchar(20) := 'ajith';
V_dob date := sysdate;
begin
dbms_output.put_line('the values is' || V_star);
dbms_output.put_line('the values is' || V_starr);
dbms_output.put_line('the values is' ||outer. V_dob);
end;
dbms_output.put_line('the values is' || V_dob);
dbms_output.put_line('the values is' || V_dob);
end;

declare
V_num zero.matter%type;
V_star V_num%type;
V_motor zero.motor_name%type;
V_salesman_name V_motor%type;
begin
insert into zero
values ('1111','00011','honada','maadan');
dbms_output.put_line('the values is inserted');
insert into zero
values ('1112','00022','yamaaha','maodi');
dbms_output.put_line('the values is inserted');
insert into zero
values ('1113','00031','suzuahi','taom');
dbms_output.put_line('the values is inserted');
select * into V_num,V_star,V_motor,V_salesman_name from zero where motor_name = 'yamaha';
dbms_output.put_line('the value is inserted:' || V_salesman_name );
end;

select * from zero;


declare
V_hunter zero %rowtype;
begin
select * into V_hunter from zero where motor_name = 'yamaha';
dbms_output.put_line(V_hunter. salesman_name);
end;

--- index by table or associative array
declare
type V_index is table of varchar2(20)
index by simple_integer;

V_star V_index;

begin

V_star(1):= 'suriya';
V_star(20):='kumar';
dbms_output.put_line(V_star(20));
end;
/


select * from election;
-- by using %rowtype
declare
type V_boomer is table of election%rowtype
index by simple_integer;
V_hut V_boomer;
begin
select * into V_hut(3) from election where states = 'Liverpool';
dbms_output.put_line(V_hut(3).nation);
end;

-- by using %type
declare
type V_boomer is table of election.lastname%type
index by simple_integer;
V_hut V_boomer;
begin
select lastname into V_hut(3) from election where states = 'Liverpool';
dbms_output.put_line(V_hut(3));
end;

---nested table

declare
type V_nest is table of varchar2(20);
V_iron V_nest := V_nest();
begin
V_iron.extend(20);
V_iron(11) := 'mass';
V_iron(12) := 'tom';
dbms_output.put_line(V_iron(11));
end;
/

-- with array
declare
type V_nest is table of Varchar2(20);
 V_sun V_nest := V_nest('the','hunter');
 begin
 V_sun.extend(20);
 dbms_output.put_line(V_sun(1) ||' '|| V_sun(2));
 end;
 /
 
 -- using %rowtype
  declare 
  type V_git is table of election%rowtype;
  V_hub V_git := V_git();
  begin
  V_hub.extend(20);
  select * into V_hub(1) from election where suriya = 'vijay';
  dbms_output.put_line(V_hub(1).lastname);
  end;
  /
  
  -- using %type
  declare
  type V_bug is table of election.nation%type;
  V_hit V_bug := V_bug();
  begin
  V_hit.extend(20);
  select nation into V_hit(1) from election where suriya = 'vijay';
  dbms_output.put_line(V_hit(1));
  end;
  /
 --varray
  declare
  type V_array is varray(20) of varchar2(20);
  V_moon V_array;
  begin
  V_moon:=V_array();
  V_moon.extend(10);
  V_moon(1):= 'star';
  V_moon(2):= 'bud';
  dbms_output.put_line(V_moon(1));
  end;
  

--collection method 


-- count in index by array
declare 
type V_chn is table of varchar2(20)
index by simple_integer;
 
V_rcb V_chn;

begin

V_rcb(1):= 'virat';
V_rcb(2):= 'faf';

dbms_output.put_line(V_rcb.count);
end;
  
-- count in nested table

declare
 
type V_ck is table of varchar2(20);
 V_msd V_ck := V_ck();
 begin
 V_msd.extend(7);
 V_msd(1):='hut';
 V_msd(2):='ter';
 dbms_output.put_line(V_msd.count);
 end;
 
--- count in varray

declare
type V_kkr is varray(20)of varchar2(20);
V_srh V_kkr;
begin
V_srh:=V_kkr();
V_srh.extend(5);
V_srh(1):= 'hahi';
dbms_output.put_line(V_srh.count);
end;
  
 --- first
 
 declare 
type V_chn is table of varchar2(20)
index by simple_integer;
 
V_rcb V_chn;

begin
V_rcb(4):= 'viraat';

V_rcb(1):= 'virat';
V_rcb(6):= 'faf';
V_rcb(5):= 'fbf';

dbms_output.put_line(V_rcb.first);
end;
  
--- last
 declare 
type V_chn is table of varchar2(20)
index by simple_integer;
 
V_rcb V_chn;

begin
V_rcb(4):= 'viraat';

V_rcb(1):= 'virat';
V_rcb(6):= 'faf';
V_rcb(5):= 'fbf';

dbms_output.put_line(V_rcb.last);
end;
 
 
--- exist
 declare 
type V_chn is table of varchar2(20)
index by simple_integer;
 
V_rcb V_chn;

begin
V_rcb(4):= 'viraat';

V_rcb(1):= 'virat';
V_rcb(6):= 'faf';
V_rcb(5):= 'fbf';
if V_rcb.exists(60) = true
then
dbms_output.put_line(' the values is there');
else
dbms_output.put_line(' the values is not there');
end if;
--dbms_output.put_line(V_rcb.last);
end;
  
 -- prior
  declare 
type V_chn is table of varchar2(20)
index by simple_integer;
 
V_rcb V_chn;

begin
V_rcb(4):= 'viraat';

V_rcb(1):= 'virat';
V_rcb(6):= 'faf';
V_rcb(5):= 'fbf';

dbms_output.put_line(V_rcb.prior(5));
end;


--next
 declare 
type V_chn is table of varchar2(20)
index by simple_integer;
 
V_rcb V_chn;

begin
V_rcb(4):= 'viraat';

V_rcb(1):= 'virat';
V_rcb(6):= 'faf';
V_rcb(5):= 'fbf';

dbms_output.put_line(V_rcb.next(1));
end;
  
  
-- limit
declare
type V_kkr is varray(20)of varchar2(20);
V_srh V_kkr;
begin
V_srh:=V_kkr();
V_srh.extend(5);
V_srh(1):= 'hahi';
dbms_output.put_line(V_srh.limit);
end;
--trim
declare
type V_kkr is varray(20)of varchar2(20);
V_srh V_kkr;
begin
V_srh:=V_kkr();
V_srh.extend(5);
V_srh(1):= 'hahi';
dbms_output.put_line(V_srh.count);
V_srh.trim;
dbms_output.put_line(V_srh.count);

end;

--trim(n)
declare
type V_kkr is varray(20)of varchar2(20);
V_srh V_kkr;
begin
V_srh:=V_kkr();
V_srh.extend(5);
V_srh(1):= 'hahi';
dbms_output.put_line(V_srh.count);
V_srh.trim(2);
dbms_output.put_line(V_srh.count);

end;


--delete
declare
type V_kkr is varray(20)of varchar2(20);
V_srh V_kkr;
begin
V_srh:=V_kkr();
V_srh.extend(5);
V_srh(1):= 'hahi';
dbms_output.put_line(V_srh.count);
V_srh.delete;
dbms_output.put_line(V_srh.count);

end;
-- delete()
declare
type V_kkr is table of varchar2(20);
V_srh V_kkr:=V_kkr();
begin
V_srh.extend(5);
V_srh(1):= 'hahi';
V_srh(2):= 'haaahi';
V_srh(3):= 'haahi';

dbms_output.put_line(V_srh.count);
V_srh.delete(1);
dbms_output.put_line(V_srh.count);

end;

-- multiset operator
declare
type V_emp is table of varchar2(20);
V_emp1 V_emp:= V_emp(1,2,3,4,5,6,11,12);
V_emp2 V_emp:= V_emp(1,2,3,4,5,6,7,8,9);
V_emp3 V_emp;
begin
V_emp3:= V_emp2 multiset union V_emp1;
for i in V_emp3.first .. V_emp3.last loop
dbms_output.put_line(V_emp3(i));
end loop;
end;
